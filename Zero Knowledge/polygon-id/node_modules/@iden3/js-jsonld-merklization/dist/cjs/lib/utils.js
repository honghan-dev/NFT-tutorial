"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateValue = exports.byteEncoder = exports.sortArr = exports.getGraphName = void 0;
const constants_1 = require("./constants");
const temporal_polyfill_1 = require("temporal-polyfill");
function getGraphName(q) {
    if (!q.graph.value) {
        return constants_1.MerklizationConstants.DEFAULT_GRAPH_NODE_NAME;
    }
    if (q.graph.termType !== 'BlankNode') {
        throw new Error('graph node is not of BlankNode type');
    }
    return q.graph.value;
}
exports.getGraphName = getGraphName;
const sortArr = (arr) => {
    return arr.sort((a, b) => {
        if (a < b) {
            return -1;
        }
        if (a > b) {
            return 1;
        }
        return 0;
    });
};
exports.sortArr = sortArr;
exports.byteEncoder = new TextEncoder();
const validateValue = (val) => {
    switch (typeof val) {
        case 'boolean':
        case 'string':
        case 'number':
            return;
        case 'object':
            if (val instanceof temporal_polyfill_1.Temporal.Instant) {
                return;
            }
    }
    throw new Error(`unexpected value type ${typeof val}, expected boolean | number | Temporal.Instant | string`);
};
exports.validateValue = validateValue;
//# sourceMappingURL=utils.js.map